apply plugin: 'java'
apply plugin:"war"
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'


targetCompatibility = 1.7  
sourceCompatibility = 1.7
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    maven { url 'http://172.16.1.5:8081/nexus/content/groups/public' } // 自定义库地址
    mavenCentral()
}

[compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"

dependencies {
    compile 'org.nutz:nutz:1.b.53'
    compile 'commons-collections:commons-collections:3.2'
    testCompile 'junit:junit:4.+'
    providedCompile 'javax.servlet:servlet-api:2.5' // 编译期
    providedRuntime 'javax.servlet:jstl:1.2'    // 运行时
    compile 'com.alibaba:druid:1.0.15'
    compile 'mysql:mysql-connector-java:5.1.23'
}

test {
    systemProperties 'property': 'value'
}

/*将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包*/  
task jarWithoutResources(type: Jar) {  
    baseName project.name  
    from("$buildDir/classes/main")  
}  
/*1.将$projectDir/resources下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录,不打包是为了方便修改配置*/  
/*2.将sourceSet.main下面编译的文件和资源文件剔除:*/  
//classpath=classpath - files("$buildDir/classes/main")  
//classpath=classpath - files("$buildDir/resources/main")  
/*3.将前一步打包的jar文件放入WEB-INF/lib目录下*/  
war{  
    dependsOn jarWithoutResources  
    from("$projectDir/src/main/webapp") {  
        include "*.properties"  
        into("WEB-INF/classes")  
    }  
    classpath=classpath - sourceSets.main.output  
    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")  
}


